{"version":3,"sources":["./src/app/invoices/invoice-entry.model.ts","./src/environments/environment.ts","./src/app/invoices/vat.enum.ts","./src/app/companies/app.companies.ts","./src/app/companies/app.companies.html","./src/app/invoices/car.model.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/taxation/taxation.component.ts","./src/app/taxation/taxation.component.html","./src/app/companies/company.ts","./src/app/taxation/tax-calculator.service.ts","./src/app/app.module.ts","./src/app/invoices/invoice.component.ts","./src/app/invoices/invoice.component.html","./src/app/invoices/invoice.ts","./src/app/companies/CompanyService.ts","./src/app/invoices/invoice.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Car } from \"./car.model\";\nimport { Vat } from \"./vat.enum\";\n\n// invoice-entry.model.ts\nexport class InvoiceEntry {\n    public id: number;\n    public description: string;\n    public quantity: number;\n    public price: number;\n    public vatValue: number;\n    public vatRate: string;\n    public depreciationCosts: Car | null;\n  \n    constructor(\n      id: number,\n      description: string,\n      quantity: number,\n      price: number,\n      vatValue: number,\n      vatRate: string,\n      depreciationCosts: Car | null\n    ) {\n      this.id = id;\n      this.description = description;\n      this.quantity = quantity;\n      this.price = price;\n      this.vatValue = vatValue;\n      this.vatRate = vatRate;\n      this.depreciationCosts = depreciationCosts;\n    }\n  }\n  \n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: \"//localhost:7777\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","// vat.enum.ts\nexport enum Vat {\n  VAT_21 = \"VAT_21\",\n  VAT_8 = \"VAT_8\",\n  VAT_7 = \"VAT_7\",\n  VAT_5 = \"VAT_5\",\n  VAT_0 = \"VAT_0\",\n  VAT_ZW = \"VAT_0\",\n\n}\n\nexport function getVatRateValue(vatRate: Vat): number {\n  switch (vatRate) {\n    case Vat.VAT_0:\n      return 0;\n    case Vat.VAT_5:\n      return 5;\n    case Vat.VAT_7:\n      return 7\n    case Vat.VAT_8:\n      return 8\n    case Vat.VAT_21:\n      return 21\n    default:\n      return 0;\n  }\n}\n\nexport function getVatRateFromString(vatRate: string) {\n  switch (vatRate) {\n    case \"VAT_21\":\n      return Vat.VAT_21;\n    case \"VAT_8\":\n      return Vat.VAT_8;\n    case \"VAT_7\":\n      return Vat.VAT_7;\n    case \"VAT_5\":\n      return Vat.VAT_5;\n    case \"VAT_0\":\n      return Vat.VAT_0;\n    default:\n      return Vat.VAT_ZW;\n  }\n}\n\n","import { Component, OnInit } from '@angular/core';\nimport { Company } from './company';\nimport { CompanyService } from './CompanyService';\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './app.companies.html',\n  styleUrls: ['./app.companies.css']\n})\nexport class CompanyComponent implements OnInit {\n  title = 'invoicing-angular-app';\n\n  companies: Company[] = []\n\n  newCompany: Company = new Company(0,\"\",\"\",\"\",0,0);\n\n  constructor(\n    private companiesService: CompanyService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.companiesService.getCompanies()\n    .subscribe(companies =>{\n      this.companies = companies\n    })\n  }\n\n  addCompany(){\n    this.companiesService.addCompany(this.newCompany)\n    .subscribe(id =>{\n      this.newCompany.id = id;\n      this.companies.push(this.newCompany)\n      this.newCompany = new Company(this.companies.length,\"\",\"\",\"\",0,0);\n    })\n  }\n\n  deleteCompany(companyToDelete: Company) {\n    this.companiesService.deleteCompany(companyToDelete.id)\n    .subscribe(() =>{\n      this.companies = this.companies.filter(company => company !== companyToDelete);\n    })\n  }\n\n  triggerUpdate(company: Company) {\n    company.editedCompany = new Company(\n      company.id,\n      company.taxIdentificationNumber,\n      company.address,\n      company.name,\n      company.healthInsurance,\n      company.pensionInsurance\n    );\n\n    company.editMode = true;\n  }\n  cancelCompanyUpdate(company: Company) {\n    company.editMode = false;\n  }\n\n  updateCompany(updatedCompany: Company) {\n    this.companiesService.editCompany(updatedCompany.editedCompany ? updatedCompany.editedCompany: updatedCompany)\n    .subscribe(() =>{\n      if(updatedCompany.editedCompany) {\n        updatedCompany.taxIdentificationNumber = updatedCompany.editedCompany.taxIdentificationNumber\n        updatedCompany.address = updatedCompany.editedCompany.address\n        updatedCompany.name = updatedCompany.editedCompany.name\n        updatedCompany.pensionInsurance = updatedCompany.editedCompany.pensionInsurance\n        updatedCompany.healthInsurance = updatedCompany.editedCompany.healthInsurance\n      }\n    })\n\n    updatedCompany.editMode = false;\n  }\n}\n","\n<div id='HeaIdHeder' class=\"content\">\n  <div class=\"main-title\">Manage companies</div>\n</div>\n<div class=\"content-container\">\n<table class=\"table table-striped table-bordered table-hover\" id=\"companiesTable\">\n\n<tr>\n    <th id='taxIdHeader' class=\"mb-3 text-center\">Tax identification number</th>\n    <th id='addressHeader' class=\"mb-3 text-center\">Address</th>\n    <th id='nameHeader' class=\"mb-3 text-center\">Name</th>\n    <th id='pensionInsuranceHeader' class=\"mb-3 text-center\">Pension insurance </th>\n    <th id='healthInsuranceHeader' class=\"mb-3 text-center\">Health insurance </th>\n    <th class=\"mb-3 text-center\">Actions</th>\n  </tr>\n\n  <tr class=\"companyRow\" *ngFor=\"let company of companies\">\n    <td *ngIf=\"!company.editMode\" id=\"taxId\">{{company.taxIdentificationNumber}}</td>\n    <td *ngIf=\"company.editMode\" >\n      <input\n      [ngModel]=\"company.editedCompany?.taxIdentificationNumber\"\n      (ngModelChange)=\"company.editedCompany && (company.editedCompany.taxIdentificationNumber = $event)\"\n      type=\"text\"\n      class=\"form-control\"\n      name=\"taxIdentificationNumber\"\n      title=\"Enter the tax identification number (e.g. 123-456-78-90)\"\n    />\n    </td>\n\n    <td *ngIf=\"!company.editMode\"  id=\"address\">{{company.address}}</td>\n    <td *ngIf=\"company.editMode\" >\n      <input\n        [ngModel]=\"company.editedCompany?.address\"\n        (ngModelChange)=\"company.editedCompany && (company.editedCompany.address = $event)\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"address\"\n        title=\"Enter the address (e.g. 123 Main St, City, Country)\"\n      />    </td>\n    <td *ngIf=\"!company.editMode\"  id=\"name\">{{company.name}}</td>\n    <td *ngIf=\"company.editMode\">\n      <input\n        [ngModel]=\"company.editedCompany?.name\"\n        (ngModelChange)=\"company.editedCompany && (company.editedCompany.name = $event)\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"name\"\n        title=\"Enter the company name (e.g. ABC Corp.)\"\n      />    </td>\n    <td *ngIf=\"!company.editMode\" id=\"pensionInsurance\">{{company.pensionInsurance}}</td>\n    <td *ngIf=\"company.editMode\">\n      <input\n        [ngModel]=\"company.editedCompany?.pensionInsurance\"\n        (ngModelChange)=\"company.editedCompany && (company.editedCompany.pensionInsurance = $event)\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"pensionInsurance\"\n        title=\"Enter the pension insurance value (e.g. 5000)\"\n      />    </td>\n    <td *ngIf=\"!company.editMode\" id=\"healthInsurance\">{{company.healthInsurance}}</td>\n    <td *ngIf=\"company.editMode\">\n      <input\n        [ngModel]=\"company.editedCompany?.healthInsurance\"\n        (ngModelChange)=\"company.editedCompany && (company.editedCompany.healthInsurance = $event)\"\n        type=\"text\"\n        class=\"form-control\"\n        name=\"healthInsurance\"\n        title=\"Enter the health insurance value (e.g. 10000)\"\n      />    </td>\n    <td class=\"button-cell\">\n      <button *ngIf=\"!company.editMode\" (click)=\"deleteCompany(company)\" class=\"btn btn-danger btn-margin\" title=\"Delete company\">\n        <i class=\"fas fa-trash\"></i>\n      </button>\n      <span *ngIf=\"!company.editMode\" >&nbsp;</span>\n      <button *ngIf=\"!company.editMode\" (click)=\"triggerUpdate(company)\" class=\"btn btn-secondary btn-margin\" title=\"Edit company details\">\n        <i class=\"fas fa-edit\"></i>\n      </button>\n      <button *ngIf=\"company.editMode\" (click)=\"updateCompany(company)\" class=\"btn btn-primary\" title=\"Update company information \">\n        <i class=\"fas fa-save\"></i>\n      </button>\n      <span *ngIf=\"company.editMode\" >&nbsp;</span>\n      <button *ngIf=\"company.editMode\" (click)=\"cancelCompanyUpdate(company)\" class=\"btn btn-secondary\" title=\"Cancel editing\">\n        <i class=\"fas fa-times\"></i>\n      </button>\n    </td>\n  </tr>\n\n\n  <tr class=\"new-entry-row\">\n  <td><input   [(ngModel)]=\"newCompany.taxIdentificationNumber\" type=\"text\" class=\"form-control\" name=\"taxIdentificationNumber\" title=\"Enter the tax identification number (e.g. 123-456-78-90)\"></td>\n    <td><input  [(ngModel)]=\"newCompany.address\" type=\"text\" class=\"form-control\" name=\"address\" title=\"Enter the address (e.g. 123 Main St, City, Country)\"></td>\n    <td><input  [(ngModel)]=\"newCompany.name\" type=\"text\" class=\"form-control\" name=\"name\" title=\"Enter the company name (e.g. ABC Corp.)\"></td>\n    <td><input   [(ngModel)]=\"newCompany.pensionInsurance\" type=\"text\" class=\"form-control\" name=\"pensionInsurance\" title=\"Enter the pension insurance value (e.g. 5000)\"></td>\n    <td><input  [(ngModel)]=\"newCompany.healthInsurance\" type=\"text\" class=\"form-control\" name=\"healthInsurance\" title=\"Enter the health insurance value (e.g. 10000)\"></td>\n    <td>\n      <button id=\"addCompanyBtn\" (click)=\"addCompany()\" type=\"button\" class=\"btn btn-primary\" title=\"Add or register a new company\" >\n        <i class=\"fas fa-clipboard-check\"></i>\n      </button></td>\n  </tr>\n\n</table>\n</div>\n","// car.model.ts\nexport class Car {\n    public id: number;\n    public registrationNum: string;\n    public ifPrivateUse: boolean;\n  \n    constructor(id: number, registrationNum: string, ifPrivateUse: boolean) {\n      this.id = id;\n      this.registrationNum = registrationNum;\n      this.ifPrivateUse = ifPrivateUse;\n    }\n  }\n  ","import { Component, OnInit } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- dashboard.component.html -->\n<div class=\"dashboard-container\">\n    <header>\n      <h1>Invoicing App</h1>\n      <nav>\n        <ul>\n          <li><a routerLink=\"/companies\" routerLinkActive=\"active\">Manage Companies</a></li>\n          <li><a routerLink=\"/invoices\" routerLinkActive=\"active\">Invoices</a></li>\n          <li><a routerLink=\"/taxation\" routerLinkActive=\"active\">Taxation</a></li>\n        </ul>\n      </nav>\n    </header>\n    <main>\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n  ","// tax-calculator.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { TaxCalculatorResult } from './tax-calculator-result.model';\nimport { CompanyService } from '../companies/CompanyService'; \nimport { TaxCalculatorService } from './tax-calculator.service'; \nimport { Company } from '../companies/company';\n\n@Component({\n  selector: 'app-taxation',\n  templateUrl: './taxation.component.html',\n  styleUrls: ['./taxation.component.css']\n})\nexport class TaxationComponent implements OnInit {\n  taxCalculatorForm!: FormGroup;\n  companies: Company[] = [];\n  taxResult!: TaxCalculatorResult;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private companyService: CompanyService,\n    private taxCalculatorService: TaxCalculatorService\n  ) {}\n\n  ngOnInit(): void {\n    this.taxCalculatorForm = this.formBuilder.group({\n      companyId: [''] // FormControl for selected company\n    });\n\n    // Fetch list of companies\n    this.companyService.getCompanies().subscribe(companies => {\n      this.companies = companies;\n    });\n  }\n\n  calculateTaxes() {\n    const company =  this.companies.filter(comapny => this.taxCalculatorForm.value.companyId == comapny.id)[0];\n    this.taxCalculatorService.calculateTaxes(company).subscribe(result => {\n      this.taxResult = result;\n    });\n  }\n}\n","<!-- tax-calculator.component.html -->\n<div id=\"TaxCalculator\" class=\"content\">\n    <div class=\"main-title\">Tax Calculator</div>\n  \n  <div class=\"content-container\">\n    <form [formGroup]=\"taxCalculatorForm\">\n      <div class=\"form-group\">\n        <label for=\"companyId\">Select Company</label>\n        <select formControlName=\"companyId\" class=\"form-control\">\n          <option *ngFor=\"let company of companies\" [value]=\"company.id\">{{ company.name }}</option>\n        </select>\n      </div>\n  \n      <div class=\"form-group\">\n        <button (click)=\"calculateTaxes()\" class=\"btn btn-primary\" title=\"Calculate Taxes\">\n          <i class=\"fas fa-calculator\"></i> Calculate Taxes\n        </button>\n      </div>\n    </form>\n  \n    <!-- Display tax result -->\n    <div *ngIf=\"taxResult\" class=\"tax-result\">\n      <!-- Income -->\n      <div class=\"result-item\">\n        <span>Income:</span>\n        <span>{{ taxResult.income | currency }}</span>\n      </div>\n    \n      <!-- Costs -->\n      <div class=\"result-item\">\n        <span>Costs:</span>\n        <span>{{ taxResult.costs | currency }}</span>\n      </div>\n    \n      <!-- Earnings -->\n      <div class=\"result-item\">\n        <span>Earnings:</span>\n        <span>{{ taxResult.earnings | currency }}</span>\n      </div>\n    \n      <!-- Pension Insurance -->\n      <div class=\"result-item\">\n        <span>Pension Insurance:</span>\n        <span>{{ taxResult.pensionInsurance | currency }}</span>\n      </div>\n    \n      <!-- Earnings Minus Cost (rounded) -->\n      <div class=\"result-item\">\n        <span>Earnings Minus Cost (rounded):</span>\n        <span>{{ taxResult.earningMinusCost | currency }}</span>\n      </div>\n    \n      <!-- Income Tax -->\n      <div class=\"result-item\">\n        <span>Income Tax:</span>\n        <span>{{ taxResult.incomeTax | currency }}</span>\n      </div>\n    \n      <!-- Final Tax -->\n      <div class=\"result-item\">\n        <span>Final Tax:</span>\n        <span>{{ taxResult.finalTax | currency }}</span>\n      </div>\n    \n      <!-- Health Insurance -->\n      <div class=\"result-item\">\n        <span>Health Insurance:</span>\n        <span>{{ taxResult.healthInsurance | currency }}</span>\n      </div>\n    \n      <!-- Incoming VAT -->\n      <div class=\"result-item\">\n        <span>Incoming VAT:</span>\n        <span>{{ taxResult.incomingVat | currency }}</span>\n      </div>\n    \n      <!-- Outgoing VAT -->\n      <div class=\"result-item\">\n        <span>Outgoing VAT:</span>\n        <span>{{ taxResult.outgoingVat | currency }}</span>\n      </div>\n    \n      <!-- VAT to Return -->\n      <div class=\"result-item\">\n        <span>VAT to Return:</span>\n        <span>{{ taxResult.vatToReturn | currency }}</span>\n      </div>\n    </div>\n    \n\n    </div>\n  </div>\n  ","export class Company {\n\n    public editMode = false;\n    public editedCompany: Company | null = null;\n\n    constructor(\n        public id: number,\n        public taxIdentificationNumber: string,\n        public address: string,\n        public name: string,\n        public healthInsurance: number,\n        public pensionInsurance: number,\n    ) {\n    }\n}","// tax-calculator.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TaxCalculatorResult } from './tax-calculator-result.model';\nimport { environment } from 'src/environments/environment';\nimport { Company } from '../companies/company';\n\nconst PATH = environment.apiUrl + '/tax';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaxCalculatorService {\n  private apiUrl = PATH; \n\n  constructor(private http: HttpClient) {}\n\n  calculateTaxes(company: Company): Observable<TaxCalculatorResult> {\n    const requestBody = company;\n    return this.http.get<TaxCalculatorResult>(this.apiUrl +  `/${company.id}`);\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from \"@angular/common/http\"\nimport { RouterModule } from '@angular/router'; \nimport { AppRoutingModule } from './app-routing.module';\n\n\nimport { CompanyComponent } from './companies/app.companies';\nimport { InvoiceComponent } from './invoices/invoice.component';\nimport { TaxationComponent } from './taxation/taxation.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    CompanyComponent,\n    InvoiceComponent,\n    TaxationComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [DashboardComponent]\n})\nexport class AppModule { }\n","// invoice.component.ts\nimport { Component, NgZone, OnInit } from '@angular/core';\nimport { Invoice } from './invoice';\nimport { InvoiceService } from './invoice.service';\nimport { Company } from '../companies/company';\nimport { InvoiceEntry } from './invoice-entry.model';\nimport { Car } from './car.model';\nimport { CompanyService } from '../companies/CompanyService';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\nimport { Vat, getVatRateFromString, getVatRateValue} from './vat.enum';\n\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoice.component.html',\n  styleUrls: ['./invoice.component.css']\n})\nexport class InvoiceComponent implements OnInit {\n  invoices: Invoice[] = [];\n  companies: Company[] = []\n  newInvoice: Invoice = new Invoice(0, '', new Date(), new Company(0, '', '', '', 0, 0), new Company(0, '', '', '', 0, 0), []);\n  vatRates: Vat[] = [Vat.VAT_0, Vat.VAT_5, Vat.VAT_7, Vat.VAT_8, Vat.VAT_21, Vat.VAT_ZW];\n\n  editingInvoice: Invoice | null = null;\n  invoiceForm: FormGroup;\n  formEntries: FormGroup;\n\n  constructor(private invoiceService: InvoiceService, private companiesService: CompanyService,\n    private fb: FormBuilder,private ngZone: NgZone ) {\n\n    this.invoiceForm = this.fb.group({\n      number: [''],\n      buyer: [null],\n      seller: [null],\n      buyerName: [''],\n      sellerName: [''],\n      date: [''],\n    });\n    this.formEntries = this.fb.group({\n      formArray: this.fb.array([])\n    })\n\n  }\n\n  ngOnInit(): void {\n    this.invoiceService.getInvoices().subscribe(invoices => {\n      this.invoices = invoices;\n    });\n    this.companiesService.getCompanies()\n    .subscribe(companies =>{\n      this.companies = companies\n    });\n  }\n\n  addInvoice() {\n    this.invoiceService.addInvoice(this.newInvoice).subscribe(id => {\n      this.newInvoice.id = id;\n      this.invoices.push(this.newInvoice);\n      this.newInvoice = new Invoice(0, '', new Date(), new Company(0, '', '', '', 0, 0), new Company(0, '', '', '', 0, 0), []);\n    });\n  }\n\n  deleteInvoice(invoiceToDelete: Invoice) {\n    this.invoiceService.deleteInvoice(invoiceToDelete.id).subscribe(() => {\n      this.invoices = this.invoices.filter(invoice => invoice !== invoiceToDelete);\n    });\n  }\n\n  addCarForEntry(index: number) {\n    if (!this.newInvoice.entries[index].depreciationCosts) {\n      this.newInvoice.entries[index].depreciationCosts = new Car(0, '', false);\n    }\n  }\n\n  addCarForEditedEntry(index: number): void {\n    const formArray = this.formEntries.get('formArray') as FormArray;\n\n    console.log(index);\n    \n  \n    if (formArray && formArray.controls.length > index) {\n      const entryFormGroup = formArray.at(index) as FormGroup;\n      const depreciationCostsFormGroup = entryFormGroup.get('depreciationCosts') as FormGroup;\n\n      console.log(depreciationCostsFormGroup);\n      \n      console.log(\"if sts: \", !depreciationCostsFormGroup.value);\n      \n  \n      if (!depreciationCostsFormGroup.value) {\n        entryFormGroup.setControl('depreciationCosts', this.fb.group({\n          id: [0],\n          registrationNum: [''],\n          ifPrivateUse: [false]\n        }));\n\n        console.log(entryFormGroup);\n        \n\n      }\n    }\n  }\n\n  onValueChange(fieldName: string, entry: InvoiceEntry) {\n    switch (fieldName) {\n      case 'quantity':\n      case 'price':\n      case 'vatRate':\n        this.recomputeVatValue(entry);\n        break;\n    }\n  }\n\n  onValueFormEntryChange(fieldName: string, index: number) {\n    \n    switch (fieldName) {\n      case 'quantity':\n      case 'price':\n      case 'vatRate':\n        const entryArray = this.formEntries.get('formArray') as FormArray\n        const quantity = entryArray.controls[index].get('quantity')?.value;\n        const price = entryArray.controls[index].get('price')?.value;\n        const vatRate = entryArray.controls[index].get('vatRate')?.value;\n        entryArray.controls[index].get('vatValue')?.setValue(\n          (getVatRateValue(vatRate) / 100) * quantity * price\n        );\n        break;\n    }\n  }\n\n  \n\n  recomputeVatValue(entry: InvoiceEntry) {\n\n    entry.vatValue = (getVatRateValue(getVatRateFromString(entry.vatRate)) / 100) * entry.quantity * entry.price;\n  }\n\n  addEntry() {\n    // Create a new entry with default values\n  const newEntry = new InvoiceEntry(0, \"\", 0, 0, 0, Vat.VAT_0 , null);\n\n  // Update the newInvoice object\n  this.newInvoice = {\n    ...this.newInvoice,\n    entries: [...this.newInvoice.entries, newEntry],\n  };\n}\n\n\n\n  deleteEntry(index: number) {\n    if (this.newInvoice.entries && index >= 0 && index < this.newInvoice.entries.length) {\n      this.newInvoice.entries.splice(index, 1);\n    }\n  }\n\n  deleteEntryFromEditedInvoice(index: number): void {\n    const formArray = this.formEntries.get('formArray') as FormArray;\n  \n    if (formArray && formArray.controls.length > index) {\n      formArray.removeAt(index);\n    }\n  }\n\n  addNewEntry() {\n    const newEntry = this.fb.group({\n      // Define form controls for a new entry\n      description: [''],\n      quantity: [0],\n      price: [0],\n      vatRate: [''],\n      vatValue: [0],\n      depreciationCosts: [null],\n    });\n  \n    (this.formEntries.get('formArray') as FormArray).push(newEntry);\n  }\n\n  editInvoice(invoice: Invoice): void {\n    this.editingInvoice = invoice;\n    // Set default values in the form when editing\n    this.setFormValues();\n  }\n\n  addCarForEntryForm(index: number) {\n    this.addCarForEditedEntry(index);\n //   this.setFormValues();\n  }\n\n  trackByFn(index: number, item: any) {   \n    return index; \n  }\n\n  // Method to set default values in the form when editing\n  private setFormValues(): void {\n\n    if (this.editingInvoice) {\n      const entryControls = this.editingInvoice.entries.map(entry => this.fb.group({\n        id: [entry.id],\n        description: [entry.description],\n        quantity: [entry.quantity],\n        price: [entry.price],\n        vatRate: [entry.vatRate],\n        vatValue: [entry.vatValue],\n        depreciationCosts: entry.depreciationCosts !== null ? this.fb.group({\n          id: [entry.depreciationCosts?.id],\n          registrationNum: [entry.depreciationCosts?.registrationNum],\n          ifPrivateUse: [entry.depreciationCosts?.ifPrivateUse],\n        }) : [null]\n      }));\n  \n      this.invoiceForm = this.fb.group({\n        number: [this.editingInvoice.number],\n        buyer: [this.editingInvoice.buyer],\n        seller: [this.editingInvoice.seller],\n        buyerName: [this.editingInvoice.buyer.name],\n        sellerName: [this.editingInvoice.seller.name],\n        date: [this.editingInvoice.date],\n      });\n  \n      this.formEntries = this.fb.group({\n        formArray: this.fb.array([...entryControls])\n      });\n\n    }\n\n  }\n\n  saveEditedInvoice() {\n    // Update the invoice details\n    const buyerName = this.invoiceForm.value.buyerName\n    const sellerName = this.invoiceForm.value.sellerName\n\n    delete this.invoiceForm.value.buyerName\n    delete this.invoiceForm.value.sellerName\n\n    const formArray = this.formEntries.get('formArray')\n\n    const editedInvoice: Invoice = {\n      ...this.editingInvoice!,\n      ...this.invoiceForm.value,\n      entries: formArray ? formArray.value : this.editingInvoice?.entries , // Update entries as needed\n    };\n\n    const buyerCompany = this.companies.find(company => {\n      return company.name === buyerName\n    })\n\n    const sellerCompany = this.companies.find(company =>{\n      return company.name === sellerName\n    })\n\n    editedInvoice.buyer = buyerCompany ? buyerCompany : editedInvoice.buyer\n    editedInvoice.seller = sellerCompany ? sellerCompany : editedInvoice.seller\n\n    // Call the service to save changes\n    this.invoiceService.updateInvoice(editedInvoice).subscribe(() => {\n      // Update the invoices list\n      const index = this.invoices.findIndex(i => i.id === editedInvoice.id);\n      if (index !== -1) {\n        this.invoices[index] = editedInvoice;\n      }\n\n      // Reset editingInvoice and form\n      this.editingInvoice = null;\n      this.invoiceForm.reset();\n      this.formEntries.reset();\n\n    });\n  }\n\n  cancelEditing() {\n    // Reset editingInvoice and form\n    this.editingInvoice = null;\n    this.invoiceForm.reset();\n    this.formEntries.reset();\n  }\n\n}\n//TODO adding new entries to edited invoice \n//TODO change vat value when vat rate is changed\n//TODO fix frontedn bugs\n","<!-- invoice.component.html -->\n\n<div id='Invoice' class=\"content\">\n  <div class=\"main-title\">Manage Invoices</div>\n</div>\n\n<div class=\"content-container\">\n  <form>\n    <!-- Invoice details row -->\n    <div class=\"invoice-details-row\">\n      <div class=\"form-group row\">\n        <label for=\"number\">Invoice Number</label>\n        <input [(ngModel)]=\"newInvoice.number\" type=\"text\" class=\"form-control\" name=\"number\" id=\"number\" required>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"buyer\">Buyer</label>\n        <select [(ngModel)]=\"newInvoice.buyer\" class=\"form-control\" name=\"buyer\" id=\"buyer\" required>\n          <option *ngFor=\"let company of companies\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"seller\">Seller</label>\n        <select [(ngModel)]=\"newInvoice.seller\" class=\"form-control\" name=\"seller\" id=\"seller\" required>\n          <option *ngFor=\"let company of companies\" [ngValue]=\"company\">{{ company.name }}</option>\n        </select>\n      </div>\n\n      <div class=\"form-group row\">\n        <label for=\"date\">Invoice Date</label>\n        <input [(ngModel)]=\"newInvoice.date\" type=\"date\" class=\"form-control\" name=\"date\" id=\"date\" required>\n      </div>\n    </div>\n\n    <!-- Invoice entries -->\n    <div *ngFor=\"let entry of newInvoice.entries; let i = index\" class=\"invoice-entry\">\n      <div class=\"form-group\">\n        <label for=\"entryDescription{{i}}\">Entry Description</label>\n        <input [(ngModel)]=\"entry.description\" type=\"text\" class=\"form-control\" name=\"entryDescription{{i}}\" id=\"entryDescription{{i}}\" placeholder=\"Enter entry description\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"quantity{{i}}\">Quantity</label>\n        <input [(ngModel)]=\"entry.quantity\" (change)=\"onValueChange('quantity', entry)\" type=\"number\" class=\"form-control\" name=\"quantity{{i}}\" id=\"quantity{{i}}\" placeholder=\"Enter quantity\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"price{{i}}\">Price</label>\n        <input [(ngModel)]=\"entry.price\" (change)=\"onValueChange('price', entry)\" type=\"number\" class=\"form-control\" name=\"price{{i}}\" id=\"price{{i}}\" placeholder=\"Enter price\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"vatRate{{i}}\">VAT Rate (%)</label>\n        <select [(ngModel)]=\"entry.vatRate\" (change)=\"onValueChange('vatRate', entry)\" class=\"form-control\" name=\"vatRate{{i}}\" id=\"vatRate{{i}}\" required>\n          <option *ngFor=\"let vatRate of vatRates\" [ngValue]=\"vatRate\">{{ vatRate }}</option>\n        </select>\n      </div>\n\n      <div class=\"form-group\">\n        <label>VAT Value</label>\n        <td>\n          {{  entry.vatValue | currency }}\n        </td>\n      </div>\n\n      <div *ngIf=\"!entry.depreciationCosts\" class=\"form-group\">\n        <button (click)=\"addCarForEntry(i)\" class=\"btn btn-info\" title=\"Add Car\">\n          <i class=\"fas fa-car\"></i> Add Car\n        </button>\n      </div>\n\n      <div *ngIf=\"entry.depreciationCosts\" class=\"form-group\">\n        <label for=\"carRegistrationNum{{i}}\">Car Registration Number</label>\n        <input [(ngModel)]=\"entry.depreciationCosts.registrationNum\" type=\"text\" class=\"form-control\" name=\"carRegistrationNum{{i}}\" id=\"carRegistrationNum{{i}}\" placeholder=\"Enter car registration number\">\n      </div>\n    \n      <div *ngIf=\"entry.depreciationCosts\" class=\"form-group\">\n        <label for=\"ifPrivateUse{{i}}\">Private Use</label>\n        <input [(ngModel)]=\"entry.depreciationCosts.ifPrivateUse\" type=\"checkbox\" class=\"form-check-input\" name=\"ifPrivateUse{{i}}\" id=\"ifPrivateUse{{i}}\">\n      </div>\n\n      <div class=\"form-group\">\n        <button (click)=\"deleteEntry(i)\" class=\"btn btn-danger\" title=\"Delete entry\">\n          <i class=\"fas fa-trash\"></i> Delete Entry\n        </button>\n      </div>\n    </div>\n\n   <div class=\"invoice-details-row\">\n     <!-- Add entry button -->\n     <div class=\"form-group\">\n      <button (click)=\"addEntry()\" class=\"btn btn-success\" title=\"Add entry\">\n        <i class=\"fas fa-plus\"></i> Add Entry\n      </button>\n    </div>\n\n    <!-- Add invoice button -->\n    <div class=\"form-group\">\n      <button (click)=\"addInvoice()\" type=\"button\" class=\"btn btn-primary\" title=\"Add a new invoice\">\n        <i class=\"fas fa-clipboard-check\"></i> Add Invoice\n      </button>\n    </div>\n   </div>\n  </form>\n\n  <div class=\"content-container\">\n    <form *ngIf=\"!editingInvoice\" [formGroup]=\"invoiceForm\">\n      <!-- Invoice details row -->\n      <div class=\"invoice-details-row\">\n        <!-- Existing invoices -->\n        <table class=\"table table-striped table-bordered table-hover\" id=\"invoicesTable\">\n          <tr>\n            <th class=\"mb-3 text-center\">Invoice Number</th>\n            <th class=\"mb-3 text-center\">Buyer Name</th>\n            <th class=\"mb-3 text-center\">Seller Name</th>\n            <th class=\"mb-3 text-center\">Invoice Date</th>\n            <th class=\"mb-3 text-center\">Actions</th>\n          </tr>\n          <tr *ngFor=\"let invoice of invoices\">\n            <td>{{ invoice.number }}</td>\n            <td>{{ invoice.buyer.name }}</td>\n            <td>{{ invoice.seller.name }}</td>\n            <td>{{ invoice.date | date }}</td>\n            <td>\n              <button (click)=\"editInvoice(invoice)\" class=\"btn btn-warning btn-margin\" title=\"Edit invoice\">\n                <i class=\"fas fa-pencil-alt\"></i> Edit Invoice\n              </button>\n              <button (click)=\"deleteInvoice(invoice)\" class=\"btn btn-danger btn-margin\" title=\"Delete invoice\">\n                <i class=\"fas fa-trash\"></i> Delete Invoice\n              </button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </form>\n  \n    <form *ngIf=\"editingInvoice\" [formGroup]=\"invoiceForm\">\n      <!-- Edit Invoice details -->\n      <div class=\"invoice-details-row\">\n        <div class=\"form-group row\">\n          <label for=\"number\">Invoice Number</label>\n          <input formControlName=\"number\" type=\"text\" class=\"form-control\" name=\"number\" id=\"number\" required>\n        </div>\n  \n        <div class=\"form-group row\">\n          <label for=\"buyerName\">Buyer</label>\n          <select formControlName=\"buyerName\" class=\"form-control\" name=\"buyerName\" id=\"buyerName\" required>\n            <option *ngFor=\"let company of companies\" [ngValue]=\"company.name\" [selected]=\"company.name === editingInvoice.buyer.name\" >\n              {{ company.name }}\n            </option>\n          </select>\n        </div>\n  \n        <div class=\"form-group row\">\n          <label for=\"sellerName\">Seller</label>\n          <select formControlName=\"sellerName\" class=\"form-control\" name=\"sellerName\" id=\"sellerName\" required>\n            <option *ngFor=\"let company of companies\" [ngValue]=\"company.name\" [selected]=\"company.name === editingInvoice.seller.name\">\n              {{ company.name }}\n            </option>\n          </select>\n        </div>\n        \n  \n        <div class=\"form-group row\">\n          <label for=\"date\">Invoice Date</label>\n          <input formControlName=\"date\" type=\"date\" class=\"form-control\" name=\"date\" id=\"date\" required>\n        </div>\n      </div>\n  \n      <form *ngIf=\"formEntries.get('formArray')?.value.length > 0\" [formGroup]=\"formEntries\" >\n        <div formArrayName=\"formArray\">\n          <div *ngFor=\"let entryValue of formEntries.get('formArray')?.value ; let i = index; trackBy: trackByFn\" class=\"invoice-entry\" [formGroupName]=\"i\"  >\n            <div class=\"form-group\">\n              <label for=\"entryDescription{{i}}\">Entry Description</label>\n              <input formControlName=\"description\" type=\"text\" class=\"form-control\" name=\"entryDescription{{i}}\" id=\"entryDescription{{i}}\" placeholder=\"Enter entry description\" required>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"quantity{{i}}\">Quantity</label>\n              <input formControlName=\"quantity\" type=\"number\" \n              class=\"form-control\" name=\"quantity{{i}}\" id=\"quantity{{i}}\"\n               placeholder=\"Enter quantity\" \n               (change)=\"onValueFormEntryChange('quantity',i)\"\n               required>\n            </div>\n          \n            <div class=\"form-group\">\n              <label for=\"price{{i}}\">Price</label>\n              <input formControlName=\"price\" type=\"number\" \n              class=\"form-control\" name=\"price{{i}}\" id=\"price{{i}}\" \n              placeholder=\"Enter price\"\n              (change)=\"onValueFormEntryChange('price',i)\"\n              required>\n            </div>\n          \n            <div class=\"form-group\">\n              {{ entryValue.vatRate }}\n              <label for=\"vatRate{{i}}\">VAT Rate (%)</label>\n              <select  formControlName=\"vatRate\" class=\"form-control\"\n               name=\"vatRate{{i}}\" id=\"vatRate{{i}}\"\n               (change)=\"onValueFormEntryChange('vatRate',i)\"\n               required>\n                <option *ngFor=\"let vatRate of vatRates\"  \n                selected=\"vatRate === entryValue.vatRate\"\n\n                [ngValue]=\"vatRate\">{{ vatRate }}</option>\n\n              </select>\n            </div>\n          \n            <div class=\"form-group\">\n              <label>VAT Value</label>\n              <td>\n                {{ entryValue.vatValue | currency }}\n              </td>\n            </div>\n          \n            <div *ngIf=\"entryValue.depreciationCosts === null\">\n              <div class=\"form-group\">\n                <button (click)=\"addCarForEntryForm(i)\" class=\"btn btn-info\" title=\"Add Car\">\n                  <i class=\"fas fa-car\"></i> Add Car\n                </button>\n              </div>\n            </div>\n          \n            <ng-container *ngIf=\"entryValue.depreciationCosts !== null\">\n              <div formGroupName=\"depreciationCosts\">\n                <div class=\"form-group\">\n                  <label for=\"carRegistrationNum{{i}}\">Car Registration Number</label>\n                  <input  formControlName=\"registrationNum\" type=\"text\" class=\"form-control\"\n                   name=\"carRegistrationNum{{i}}\" id=\"carRegistrationNum{{i}}\"\n                    placeholder=\"Enter car registration number\"\n                    >\n                </div>\n      \n                <div class=\"form-group\">\n                  <label for=\"ifPrivateUse{{i}}\">Private Use</label>\n                  <input formControlName=\"ifPrivateUse\" type=\"checkbox\" class=\"form-check-input\" name=\"ifPrivateUse{{i}}\" id=\"ifPrivateUse{{i}}\">\n                </div>\n              </div>\n            </ng-container>\n\n          \n            <div class=\"form-group\">\n              <button (click)=\"deleteEntryFromEditedInvoice(i)\" class=\"btn btn-danger\" title=\"Delete entry\">\n                <i class=\"fas fa-trash\"></i> Delete Entry\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n\n      <div class=\"form-group\">\n        <button (click)=\"addNewEntry()\" class=\"btn btn-success\" title=\"Add New Entry\">\n          <i class=\"fas fa-plus\"></i> Add New Entry\n        </button>\n      </div>\n      \n      <div class=\"invoice-details-row\">\n        <!-- Save edited invoice button -->\n        <div class=\"form-group\">\n          <button (click)=\"saveEditedInvoice()\" class=\"btn btn-primary\" title=\"Save Edited Invoice\">\n            <i class=\"fas fa-save\"></i> Save Invoice\n          </button>\n        </div>\n  \n        <!-- Cancel editing button -->\n        <div class=\"form-group\">\n          <button (click)=\"cancelEditing()\" class=\"btn btn-secondary\" title=\"Cancel Editing\">\n            <i class=\"fas fa-times\"></i> Cancel\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","// invoice.ts\nimport { Company } from '../companies/company';\nimport { InvoiceEntry } from './invoice-entry.model';\n\nexport class Invoice {\n  public editMode = false;\n  public editedInvoice: Invoice | null = null;\n\n  constructor(\n    public id: number,\n    public number: string,\n    public date: Date ,\n    public buyer: Company ,\n    public seller: Company ,\n    public entries: InvoiceEntry[] \n  ) {}\n}\n\n","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Company } from \"./company\";\nimport { environment } from \"src/environments/environment\";\nimport { Injectable } from \"@angular/core\";\n\nconst PATH = environment.apiUrl +  \"/companies\"\n\n@Injectable({\n    providedIn: \"root\"\n})\nexport class CompanyService {\n    private options = {\n        headers: new HttpHeaders({\"Content-Type\" : \"application/json\"}),\n        withCredentials: true\n    }\n\n    constructor(private httpClient: HttpClient) {\n\n    }\n\n    getCompanies(): Observable<Company[]> {\n        return this.httpClient.get<Company[]>(PATH);\n    }\n\n    addCompany(company: Company): Observable<number> {\n        return this.httpClient.post<any>(PATH,this.formalizeCompanyObject(company), this.options );\n    }\n\n    deleteCompany(id: number): Observable<any> {\n        return this.httpClient.delete<any>(PATH + `/${id}`, this.options);\n    }\n\n    editCompany(company: Company): Observable<any> {\n        return this.httpClient.put<Company>(PATH + `/${company.id}`, this.formalizeCompanyObject(company), this.options )\n    }\n\n    private formalizeCompanyObject(company: Company) {\n        return {\n            taxIdentificationNumber: company.taxIdentificationNumber,\n            address: company.address,\n            name: company.name,\n            pensionInsurance: company.pensionInsurance,\n            healthInsurance: company.healthInsurance\n        }\n    }\n}\n\n","// invoice.service.ts\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Invoice } from './invoice';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { Company } from '../companies/company';\n\nconst PATH = environment.apiUrl + '/invoices';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InvoiceService {\n  private options = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    withCredentials: true\n  };\n\n  constructor(private httpClient: HttpClient) {}\n\n  getInvoices(): Observable<Invoice[]> {\n    return this.httpClient.get<Invoice[]>(PATH);\n  }\n\n  addInvoice(invoice: Invoice): Observable<number> {\n    return this.httpClient.post<any>(PATH, this.formalizeInvoiceObject(invoice), this.options);\n  }\n\n  deleteInvoice(id: number): Observable<any> {\n    return this.httpClient.delete<any>(PATH + `/${id}`, this.options);\n  }\n\n  updateInvoice(invoice: Invoice): Observable<Invoice> {\n    const id = invoice.id || 0; // Provide a default value for id\n    return this.httpClient.put<Invoice>(`${PATH}/${id}`, this.formalizeInvoiceObject(invoice), this.options);\n  }\n  private formalizeInvoiceObject(invoice: Invoice) {\n    // Dummy company data\n    const dummyCompany = new Company(0, 'Dummy Company', '', '', 0, 0);\n  \n    return {\n      number: invoice.number || '', \n      buyer: invoice.buyer || dummyCompany, \n      seller: invoice.seller || dummyCompany,\n      date: invoice.date || new Date(), \n      entries: invoice.entries || [] \n    };\n  }\n  \n  \n  \n}\n","// app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CompanyComponent } from './companies/app.companies';\nimport { InvoiceComponent } from './invoices/invoice.component';\nimport { TaxationComponent } from './taxation/taxation.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: 'companies', component: CompanyComponent },\n  { path: 'invoices', component: InvoiceComponent },\n  { path: 'taxation', component: TaxationComponent },\n  { path: '', redirectTo: '/', pathMatch: 'full' },\n  { path: '**', redirectTo: '/' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}